generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  usuario_id            Int               @id @default(autoincrement())
  nombre_completo       String
  correo                String            @unique
  contrasena            String
  telefono              String
  rol                   Rol               @default(USUARIO)
  publicaciones         Publicacion[]
  resenas               Resena[]
  favoritos             Favorito[]
  foto                  String?
  estado                EstadoUsuario     @default(ACTIVO)
  notificaciones        Notificacion[]
  postulaciones         Postulacion[]
  mensajesEnviados      Mensaje[]         @relation("MensajesEnviados")
  mensajesRecibidos     Mensaje[]         @relation("MensajesRecibidos")
  fechaCreacion         DateTime          @default(now())
  fechaActualizacion    DateTime          @updatedAt
  ultimoInicio          DateTime?
  publicacionesActivas  Int               @default(0)
  postulacionesActivas  Int               @default(0)
  dispositivos          Dispositivo[]
}

model Dispositivo {
  dispositivo_id            Int      @id @default(autoincrement())
  usuario_id                Int
  usuario                   Usuario  @relation(fields: [usuario_id], references: [usuario_id])
  identificador_dispositivo String
  plataforma                String
  tipo_dispositivo          String   @default("UNKNOWN")
  version_dispositivo       String   @default("1.0.0")
  fechaInicioSesion         DateTime @default(now())
  token_dispositivo         String   @default("") @unique
}

model Publicacion {
  publicacion_id         Int               @id @default(autoincrement())
  titulo                 String
  descripcion            String
  tipo                   TipoPublicacion
  estado                 EstadoPublicacion @default(ABIERTA)
  usuario_id             Int
  usuario                Usuario           @relation(fields: [usuario_id], references: [usuario_id])
  resenas                Resena[]
  favoritos              Favorito[]
  postulaciones          Postulacion[]
  cantidad_postulaciones Int               @default(0)
  maximo_postulaciones   Int               @default(5)
  etiquetas              String[]
  fechaCreacion          DateTime          @default(now())
  fechaActualizacion     DateTime          @updatedAt
}

model Favorito {
  favorito_id         Int             @id @default(autoincrement())
  usuario             Usuario         @relation(fields: [usuario_id], references: [usuario_id])
  usuario_id          Int
  publicacion         Publicacion     @relation(fields: [publicacion_id], references: [publicacion_id])
  publicacion_id      Int
  fechaCreacion            DateTime   @default(now())

  @@unique([usuario_id, publicacion_id]) 
}

model Resena {
  resena_id            Int         @id @default(autoincrement())
  calificacion         Int
  comentario           String
  usuario_id           Int
  usuario              Usuario     @relation(fields: [usuario_id], references: [usuario_id])
  publicacion_id       Int
  publicacion          Publicacion @relation(fields: [publicacion_id], references: [publicacion_id])
  fechaCreacion        DateTime    @default(now())
  fechaActualizacion   DateTime    @updatedAt
}

model Notificacion {
  notificacion_id        Int       @id @default(autoincrement())
  usuario_id             Int
  usuario                Usuario   @relation(fields: [usuario_id], references: [usuario_id])
  mensaje                String
  publicacionId          Int?
  fechaCreacion          DateTime  @default(now())
  fechaActualizacion     DateTime  @updatedAt
}

model Postulacion {
  postulacion_id     Int               @id @default(autoincrement())
  usuario_id         Int
  publicacion_id     Int
  estado             EstadoPostulacion @default(PENDIENTE)
  usuario            Usuario           @relation(fields: [usuario_id], references: [usuario_id])
  publicacion        Publicacion       @relation(fields: [publicacion_id], references: [publicacion_id])
  fechaCreacion      DateTime          @default(now())
  fechaActualizacion DateTime          @updatedAt
}

model Mensaje {
  mensaje_id           Int       @id @default(autoincrement())
  remitenteId          Int
  receptorId           Int
  contenido            String
  remitente            Usuario   @relation("MensajesEnviados", fields: [remitenteId], references: [usuario_id])
  receptor             Usuario   @relation("MensajesRecibidos", fields: [receptorId], references: [usuario_id])
  fechaCreacion        DateTime  @default(now())
  fechaActualizacion   DateTime  @updatedAt
}

enum Rol {
  USUARIO
  ADMINISTRADOR
}

enum TipoPublicacion {
  OFERTA
  SOLICITUD
}

enum EstadoPublicacion {
  ABIERTA
  COMPLETADA
}

enum EstadoUsuario {
  ACTIVO
  INACTIVO
  BANEADO
}

enum EstadoPostulacion {
  PENDIENTE
  ACEPTADA
  RECHAZADA
  EN_PROGRESO
  COMPLETADA
}
